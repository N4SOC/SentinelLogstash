input {
  tcp {
    port => 514
    type => syslog
    codec => cef {
      delimiter => "\n"
    }
  }
}
filter {
  if ("server-rst" in [name] or "client-rst" in [name] or "traffic close" in [name] or "traffic timeout" in [name]) {
    drop {
    }
  }

  if ([applicationProtocol]=="DNS" or [applicationProtocol]=="NTP" or [applicationProtocol]=="PING" or [applicationProtocol]=="SYSLOG" or [applicationProtocol]=="SNMP") {
    drop {
    }
  }

  if ([destinationAddress]=="10.200.105.22" and [destinationPort]=="10000") {
    drop {
    }
  }

  if ([destinationPort]=="2379") { # Kubernetes
    drop {
    }
  }
  if ([destinationPort]=="5353") { # Avahi DNS
    drop {
    }
  }
  if ([destinationPort]=="3163") { # Ivantis
    drop {
    }
  }
  if ([destinationPort]=="8013" and ([destinationAddress]=="10.10.0.1" or [destinationAddress]=="10.11.0.1" )) { # Forticlient connections
    drop {
    }
    if ([destinationPort]=="5060" and ([destinationAddress]=="10.10.0.17" or [sourceAddress]=="10.10.0.17" )) { # Noisy internal SIP
    drop {
    }
  }



  if ([destinationAddress]=~"10\.1\d\.\d{1,3}\.255" or [destinationAddress]=="255.255.255.255") { # Local broadcasts
    drop {
    }
  }

  if [sourceAddress] =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/ {
    cidr {
      add_tag => [ "priv_src" ]
      address => [ "%{sourceAddress}" ]
      network => [ "10.0.0.0/8","192.168.0.0/16","172.16.0.0/12","127.0.0.0/8","169.254.0.0/16","0.0.0.0/32","255.255.255.255/32" ]
    }
  }

  if [destinationAddress] =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/ {
    cidr {
      add_tag => [ "priv_dst" ]
      address => [ "%{destinationAddress}" ]
      network => [ "10.0.0.0/8","192.168.0.0/16","172.16.0.0/12","127.0.0.0/8","169.254.0.0/16", "0.0.0.0/32","255.255.255.255/32"]
    }
  }

  if "priv_src" not in [tags] {
    geoip {
      source => "sourceAddress"
      target => "geoip"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
  }

  if "priv_dst" not in [tags] {
    geoip {
      source => "destinationAddress"
      target => "geoip"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
  }

  mutate {
    convert => [ "[geoip][coordinates]", "float" ]
  }

}


output {
  pipeline {
    send_to => ["sentinel"]
  }
}

