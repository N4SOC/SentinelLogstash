RADIUS_USERNAME %{USERNAME:user}(@%{HOSTNAME:realm})?
RADIUS_LOGIN %{DATA:status}( \(%{SPACE}%{DATA:error}\))?: \[%{RADIUS_USERNAME:username}\] \(from client %{DATA:client} port %{NUMBER}( cli %{MAC:mac})?
RADIUS_LOGINFAILED_NOUSERNAME %{DATA:status}: \[\<%{DATA:error}\>\] \(from client %{DATA:client} port %{NUMBER} cli %{MAC:mac}
RADIUS_ERROR rlm_%{DATA:module}( %{DATA})?: %{GREEDYDATA:error}
RADIUS (%{RADIUS_LOGIN}|%{RADIUS_LOGINFAILED_NOUSERNAME}|%{RADIUS_ERROR})

input {
  tcp {
    port => 514
    type => syslog
    # codec => cef {
    #   delimiter => "\n"
    # }
  }
}

filter {
    grok {
        break_on_match => true
        match => [
        "message", "%{SYSLOG5424PRI}%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_process}\[%{NUMBER:syslog_uid}\]: \(%{NUMBER:logid}\)%{RADIUS}"
        ]
    }
}

output {
  pipeline {
    send_to => ["sentinel"]
  }
}
