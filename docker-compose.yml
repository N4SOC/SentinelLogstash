version: "3.9"

volumes:
  suricatalogs:
  zeeklogs:

services:
  mgmt:
    image: wernight/ngrok
    network_mode: host
    environment:
      - NGROK_PORT=2375
      - NGROK_AUTH=${ngrok_key}
    profiles:
      - mgmt

  eset:
    build:
      context: ./eset
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: eset_sentinel
    ports:
      - "2514:514"
    profiles:
      - eset

  trend:
    build:
      context: ./trend
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: trend_sentinel
    ports:
      - "3514:514/udp"
    profiles:
      - trend

  netflow:
    build:
      context: ./netflow
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: netflow_sentinel
    ports:
      - "2055:2055"
    profiles:
      - netflow

  fortigate:
    build:
      context: ./fortigate
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: fortigate_sentinel
    ports:
      - "0.0.0.0:514:514"
    profiles:
      - fortigate

  forti_memcached:
    image: memcached 
    profiles:
      - fortigate

  ciscoasa:
    build:
      context: ./ciscoasa
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: ciscoasa_sentinel
    ports:
      - "0.0.0.0:4514:514"
    profiles:
      - ciscoasa


  thycotic:
    build:
      context: ./thycotic
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: thycotic_sentinel
    ports:
      - "0.0.0.0:514:514"
    profiles:
      - thycotic

  zeek:
    build:
      context: ./zeek
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: zeek_sentinel
    volumes:
      - type: volume
        source: zeeklogs
        target: /logs/
    profiles:
      - ids

  suricata:
    build:
      context: ./suricata
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: suricata_sentinel
    volumes:
      - type: volume
        source: suricatalogs
        target: /logs
    profiles:
      - ids

  suricata_ids:
    build:
      context: ./suricata_ids
    image: suricata_ids
    volumes:
      - type: volume
        source: suricatalogs
        target: /var/log/suricata
    network_mode: host
    cap_add:
      - sys_nice
      - net_admin
    command: -i ${span_interface} -c /etc/suricata/suricata.yaml
    profiles:
      - ids

  zeek_ids:
    build:
      context: ./zeek_ids
      args:
        span_interface: ${span_interface}
    image: zeek_ids
    volumes:
      - type: volume
        source: zeeklogs
        target: /opt/zeek/spool/zeek
    network_mode: host
    cap_add:
      - sys_nice
      - net_admin
    stdin_open: true # docker run -i
    tty: true # docker run -t
    profiles:
      - ids

  vmware_old:
    build:
      context: ./vmware
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: vmware_sentinel
    ports:
      - "0.0.0.0:1514:514/udp"
    profiles:
      - vmware_old

  sophosxg:
    build:
      context: ./sophosxg
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: sophosxg
    ports:
      - "0.0.0.0:5514:514"
      - "0.0.0.0:5514:514/udp"
    profiles:
      - sophos

  sophoscentral:
    build:
      context: ./sophoscentral
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: sophoscentral
    ports:
      - "0.0.0.0:6514:514/udp"
    profiles:
      - sophos

  sophoscentral_api:
    build:
      context: ./sophoscentral_api
      args:
        sophosAPIToken: ${sophosAPIToken}
        sophosAPIid: ${sophosAPIid}
        sophosAPIsecret: ${sophosAPIsecret}
        sophosAPItenant: ${sophosAPItenant}
    image: sophoscentral_api
    profiles:
      - sophos
      
  vmware:
    build:
      context: ./vmware
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
        syslog_forward: ${syslog_forward}
    image: vmware
    ports:
      - "0.0.0.0:514:514"
      - "0.0.0.0:514:514/udp"
    profiles:
      - vmware

  hytrust:
    build:
      context: ./hytrust
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: hytrust
    ports:
      - "0.0.0.0:7514:514"
    profiles:
      - hytrust

  windows_legacy:
    build:
      context: ./windows_legacy
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: windows_legacy
    ports:
      - "0.0.0.0:3514:514"
    profiles:
      - windows_legacy
    
  netscaler:
    build:
      context: ./netscaler
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: netscaler
    ports:
      - "0.0.0.0:1514:514"
    profiles:
      - netscaler
    
  radius:
    build:
      context: ./radius
      args:
        environment_name: ${environment_name}
        workspaceID: ${workspaceID}
        workspaceKey: ${workspaceKey}
    image: radius
    ports:
      - "0.0.0.0:514:514"
    profiles:
      - radius

          
  redirector:
    build:
      context: ./redirector
    image: redirector
    ports:
      - "0.0.0.0:514:514"
    profiles:
      - redirector